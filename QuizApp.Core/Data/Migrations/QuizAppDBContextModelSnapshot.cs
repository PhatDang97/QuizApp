// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizApp.Core.Data;

#nullable disable

namespace QuizApp.Core.Data.Migrations
{
    [DbContext(typeof(QuizAppDBContext))]
    partial class QuizAppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizApp.Core.Entities.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("TimeTaken")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.ParticipantResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("bit");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("TimeTaken")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParticipantResult");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Answer")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option1")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option3")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option4")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option5")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Option6")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("QuestionGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionGroupId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.QuestionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalQuestion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("QuestionGroup");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a033f89a-a1fd-48a2-8b9e-ba9258414f09"),
                            Name = "Graphic Design",
                            TopicId = new Guid("53852352-75ae-48b2-8b76-b08064c3e34f"),
                            TotalQuestion = 0
                        });
                });

            modelBuilder.Entity("QuizApp.Core.Entities.QuizResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParticipantResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantResultId")
                        .IsUnique();

                    b.ToTable("QuizResults");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53852352-75ae-48b2-8b76-b08064c3e34f"),
                            Name = "Popular"
                        });
                });

            modelBuilder.Entity("QuizApp.Core.Entities.Question", b =>
                {
                    b.HasOne("QuizApp.Core.Entities.QuestionGroup", "QuestionGroup")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionGroupId")
                        .IsRequired()
                        .HasConstraintName("FK_QuestionGroup_Questions");

                    b.Navigation("QuestionGroup");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.QuestionGroup", b =>
                {
                    b.HasOne("QuizApp.Core.Entities.Topic", "Topic")
                        .WithMany("QuestionGroups")
                        .HasForeignKey("TopicId")
                        .IsRequired()
                        .HasConstraintName("FK_QuestionGroups_Topic");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.QuizResults", b =>
                {
                    b.HasOne("QuizApp.Core.Entities.ParticipantResult", "ParticipantResult")
                        .WithOne("Result")
                        .HasForeignKey("QuizApp.Core.Entities.QuizResults", "ParticipantResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ParticipantResult_Result");

                    b.Navigation("ParticipantResult");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.ParticipantResult", b =>
                {
                    b.Navigation("Result");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.QuestionGroup", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("QuizApp.Core.Entities.Topic", b =>
                {
                    b.Navigation("QuestionGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
